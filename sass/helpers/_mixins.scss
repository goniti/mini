//MIXINS

@mixin media($size) {
  @if $size == phone {
    @media (max-width: 599px) {
      @content;
    }
  } @else if $size == tablet {
    @media (min-width: 600px) {
      @content;
    }
  } @else if $size == tablet-xl {
    @media (min-width: 900px) {
      @content;
    }
  } @else if $size == portable {
    @media (min-width: 1200px) {
      @content;
    }
  } @else if $size == desktop {
    @media (min-width: 1800px) {
      @content;
    }
  }
}

@mixin font($size: false, $colour: false, $weight: false, $lh: false, $ls: false) {
  @if $size {
    font-size: $size;
  }
  @if $colour {
    color: $colour;
  }
  @if $weight {
    font-weight: $weight;
  }
  @if $lh {
    line-height: $lh;
  }
  @if $ls {
    letter-spacing: $ls;
  }
}

// Selection mixin
$prefixes: ("-moz-", "-webkit-", "-o-", "-ms-", "");
@mixin selection($color, $background) {
  @each $prefix in $prefixes {
    ::#{$prefix}selection {
      color: $color;
      background: $background;
    }
  }
}

// Custom scrollbar mixin
@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white, 25%)) {
  ::-webkit-scrollbar {
    width: $size;
    height: $size;
  }

  ::-webkit-scrollbar-thumb {
    background: $foreground-color;
  }

  ::-webkit-scrollbar-track {
    background: $background-color;
  }

  // For Internet Explorer
  body {
    scrollbar-face-color: $foreground-color;
    scrollbar-track-color: $background-color;
  }
}

//PlaceHolder mixin

@mixin placeholder($color: $custom-placeholder) {
  &::-webkit-input-placeholder {
    color: $color;
  }
  &:-moz-placeholder {
    color: $color;
  }
  &::-moz-placeholder {
    color: $color;
  }
  &:-ms-input-placeholder {
    color: $color;
  }
}

//transitions mixin
@mixin transition-mix($property: all, $duration: 0.2s, $timing: linear, $delay: 0s) {
  transition-property: $property;
  transition-duration: $duration;
  transition-timing-function: $timing;
  transition-delay: $delay;
}

//position absolute mixin
@mixin position-absolute($top: null, $left: null, $right: null, $bottom: null) {
  position: absolute;
  top: $top;
  left: $left;
  right: $right;
  bottom: $bottom;
}

// Burger Menu mixin
@mixin burgermenu-open-right($side: 0) {
  right: $side;
  @include transition-mix($property: right);
}
@mixin burgermenu-open-left($side: 0) {
  left: $side;
  @include transition-mix($property: left);
}

// Wrapper
@mixin wrapper($padding-top, $padding-bottom) {
  padding-top: $padding-top;
  padding-bottom: $padding-bottom;
}
// Flexbox
//--flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
  -moz-justify-content: $justify;
  -ms-justify-content: $justify;
  justify-content: $justify;
  -ms-flex-pack: $justify;
}
//--flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
  -webkit-align-items: $align;
  -moz-align-items: $align;
  -ms-align-items: $align;
  align-items: $align;
}
//--row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
  -moz-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}
//--nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
  -moz-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}
// Columns
@mixin n-columns($min-width, $gutter, $last-equal: false, $max-cols: 5) {
  &__columns {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin-left: -$gutter;
    margin-top: -$gutter;
    &__column {
      flex: 1 0 $min-width;
      margin-left: $gutter;
      margin-top: $gutter;
      @if $last-equal {
        @for $i from 2 through $max-cols {
          $screen-width: ($min-width * $i)+ ($gutter * $i);
          $column-width: (100% / $i);
          @media (min-width: $screen-width) {
            max-width: calc(#{$column-width} - #{$gutter});
          }
        }
        $column-width: (100% / $max-cols);
        @media (min-width: $min-width*$max-cols) {
          min-width: calc(#{$column-width} - #{$gutter});
        }
      }
    }
  }
}
// Icon
@mixin icon($name, $size) {
  $url: "../img/icon/SVG/#{$name}.svg";
  background: url($url);
  background-repeat: no-repeat;
  background-size: $size;
  height: $size;
  width: $size;
}
// Logo Circle
@mixin circle($size, $border, $color) {
  @extend %centerer;
  @include border-radius(50%);
  line-height: $size;
  width: $size;
  height: $size;
  border: $border;
  border-style: solid;
  background-color: $color;
}
// Shadow Grey
@mixin shadowGrey {
  -moz-box-shadow: 0px 0px 5px 1px #cfcfcf;
  -webkit-box-shadow: 0px 0px 5px 1px #cfcfcf;
  -o-box-shadow: 0px 0px 5px 1px #cfcfcf;
  box-shadow: 0px 0px 5px 2px #cfcfcf;
  filter: progid:DXImageTransform.Microsoft.Shadow(color=#cfcfcf, Direction=NaN, Strength=5);
}
// Grayscale
@mixin grayscale($value) {
  -webkit-filter: #{"grayscale(#{$value})"};
  -moz-filter: #{"grayscale(#{$value})"};
  filter: #{"grayscale(#{$value})"};
}
// FILTER color
@mixin filter(
  $invert-amount,
  $sepia-amount,
  $saturate-amount,
  $hueRotate-amount,
  $brightness-amount,
  $contrast-amount
) {
  -webkit-filter: invert($invert-amount) sepia($sepia-amount) saturate($saturate-amount) hue-rotate($hueRotate-amount)
    brightness($brightness-amount) contrast($contrast-amount);
  -moz-filter: invert($invert-amount) sepia($sepia-amount) saturate($saturate-amount) hue-rotate($hueRotate-amount)
    brightness($brightness-amount) contrast($contrast-amount);
  -ms-filter: invert($invert-amount) sepia($sepia-amount) saturate($saturate-amount) hue-rotate($hueRotate-amount)
    brightness($brightness-amount) contrast($contrast-amount);
  -o-filter: invert($invert-amount) sepia($sepia-amount) saturate($saturate-amount) hue-rotate($hueRotate-amount)
    brightness($brightness-amount) contrast($contrast-amount);
  filter: invert($invert-amount) sepia($sepia-amount) saturate($saturate-amount) hue-rotate($hueRotate-amount)
    brightness($brightness-amount) contrast($contrast-amount);
}
// Button
@mixin btn($btn-padding, $btn-fontSize, $btn-color, $btn-bgColor) {
  @extend %centerer;
  padding: $btn-padding;
  font-size: $btn-fontSize;
  color: $btn-color;
  background-color: $btn-bgColor;
  cursor: pointer;
  border: none;
  text-transform: uppercase;
  font-weight: 400;
}
// Animation Button
//--- Drawing effect
@mixin btn-border-drawing(
  $color: #ccc,
  $hover: black,
  $width: 2px,
  $vertical: top,
  $horizontal: left,
  $duration: 0.25s
) {
  box-shadow: inset 0 0 0 $width $color;
  color: $color;
  transition: color $duration $duration/3;
  position: relative;

  &::before,
  &::after {
    border: 0 solid transparent;
    box-sizing: border-box;
    content: "";
    position: absolute;
    width: 0;
    height: 0;
    #{$vertical}: 0;
    #{$horizontal}: 0;
  }

  &::before {
    $h-side: if($horizontal == "left", "right", "left");

    border-#{$vertical}-width: $width;
    border-#{$h-side}-width: $width;
  }

  &::after {
    $v-side: if($vertical == "top", "bottom", "top");

    border-#{$v-side}-width: $width;
    border-#{$horizontal}-width: $width;
  }

  &:hover {
    color: $hover;
    background: none;

    &::before,
    &::after {
      border-color: $hover;

      transition: border-color 0s, width $duration, height $duration;
      width: 100%;
      height: 100%;
    }

    &::before {
      transition-delay: 0s, 0s, $duration;
    }

    &::after {
      transition-delay: 0s, $duration, 0s;
    }
  }
}

// Divider
@mixin divider($height, $width, $bgColor) {
  height: $height;
  width: $width;
  background-color: $bgColor;
}

// Angled Edge

//---Angled Edge from Bottom
@mixin angledEdge-bottom-UpperLeft {
  position: absolute;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='none' viewBox='0 0 100 95' fill='rgb(255,255,255)' fill-opacity='1'%3E%3Cpolygon points='0,95 100,95 100,0'%3E%3C/polygon%3E%3C/svg%3E");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  content: "";
  height: 5.9375rem;
  top: -5.9375rem;
  right: 0;
  left: 0;
  width: 100%;
  z-index: 1;
}

//---Angled Edge from Top
@mixin angledEdge-top-LowerRight {
  position: absolute;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='none' viewBox='0 0 100 95' fill='rgb(255,255,255)' fill-opacity='1'%3E%3Cpolygon points='0,0 100,0 0,95'%3E%3C/polygon%3E%3C/svg%3E");
  background-position: center center;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  content: "";
  height: 5.9375rem;
  top: 0px;
  right: 0;
  left: 0;
  width: 100%;
  z-index: 1;
}

// QUOTATION

//--- marks RIGHT
@mixin quotationRight {
  font-size: 6.875rem;
  content: "\00201D";
  position: absolute;
  top: 16px;
  right: -70px;
}

//--- marks LEFT
@mixin quotationLeft {
  font-size: 6.875rem;
  content: "\00201C";
  position: absolute;
  top: 1rem;
  left: -3.4375rem;
}
